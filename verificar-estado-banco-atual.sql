-- üîç SCRIPT PARA VERIFICAR ESTADO ATUAL DO BANCO
-- Execute este script no Supabase SQL Editor para ver o que j√° existe

-- ==================================================
-- üìä VERIFICAR TABELAS EXISTENTES
-- ==================================================

SELECT 
    'üìã TABELAS EXISTENTES' as categoria,
    table_name as nome,
    table_type as tipo
FROM information_schema.tables 
WHERE table_schema = 'public'
ORDER BY table_name;

-- ==================================================
-- üîç VERIFICAR COLUNAS DA TABELA PROFILES
-- ==================================================

SELECT 
    'üë§ PROFILES - COLUNAS' as categoria,
    column_name as nome,
    data_type as tipo,
    is_nullable as nullable,
    column_default as padrao
FROM information_schema.columns 
WHERE table_name = 'profiles' AND table_schema = 'public'
ORDER BY ordinal_position;

-- ==================================================
-- üîç VERIFICAR COLUNAS DA TABELA WORKSHOPS
-- ==================================================

SELECT 
    'üîß WORKSHOPS - COLUNAS' as categoria,
    column_name as nome,
    data_type as tipo,
    is_nullable as nullable,
    column_default as padrao
FROM information_schema.columns 
WHERE table_name = 'workshops' AND table_schema = 'public'
ORDER BY ordinal_position;

-- ==================================================
-- üîç VERIFICAR COLUNAS DA TABELA DRIVERS
-- ==================================================

SELECT 
    'üöó DRIVERS - COLUNAS' as categoria,
    column_name as nome,
    data_type as tipo,
    is_nullable as nullable,
    column_default as padrao
FROM information_schema.columns 
WHERE table_name = 'drivers' AND table_schema = 'public'
ORDER BY ordinal_position;

-- ==================================================
-- ‚öôÔ∏è VERIFICAR FUN√á√ïES EXISTENTES
-- ==================================================

SELECT 
    '‚öôÔ∏è FUN√á√ïES' as categoria,
    routine_name as nome,
    routine_type as tipo
FROM information_schema.routines 
WHERE routine_schema = 'public'
ORDER BY routine_name;

-- ==================================================
-- üîó VERIFICAR TRIGGERS EXISTENTES
-- ==================================================

SELECT 
    'üîó TRIGGERS' as categoria,
    trigger_name as nome,
    event_manipulation as evento,
    event_object_table as tabela
FROM information_schema.triggers
WHERE trigger_schema = 'public'
ORDER BY trigger_name;

-- ==================================================
-- üîí VERIFICAR POL√çTICAS RLS
-- ==================================================

SELECT 
    'üîí POL√çTICAS RLS' as categoria,
    tablename as tabela,
    policyname as nome,
    permissive as permissiva,
    cmd as comando
FROM pg_policies 
WHERE schemaname = 'public'
ORDER BY tablename, policyname;

-- ==================================================
-- üìä VERIFICAR DADOS EXISTENTES
-- ==================================================

-- Contar registros em cada tabela principal
DO $$
DECLARE
    table_count INTEGER;
BEGIN
    -- Profiles
    IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'profiles') THEN
        SELECT COUNT(*) INTO table_count FROM public.profiles;
        RAISE NOTICE 'üìä PROFILES: % registros', table_count;
    ELSE
        RAISE NOTICE 'üìä PROFILES: tabela n√£o existe';
    END IF;
    
    -- Drivers
    IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'drivers') THEN
        SELECT COUNT(*) INTO table_count FROM public.drivers;
        RAISE NOTICE 'üìä DRIVERS: % registros', table_count;
    ELSE
        RAISE NOTICE 'üìä DRIVERS: tabela n√£o existe';
    END IF;
    
    -- Workshops
    IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'workshops') THEN
        SELECT COUNT(*) INTO table_count FROM public.workshops;
        RAISE NOTICE 'üìä WORKSHOPS: % registros', table_count;
    ELSE
        RAISE NOTICE 'üìä WORKSHOPS: tabela n√£o existe';
    END IF;
END $$;

-- ==================================================
-- üîç VERIFICAR EXTENS√ïES HABILITADAS
-- ==================================================

SELECT 
    'üîå EXTENS√ïES' as categoria,
    extname as nome,
    extversion as versao
FROM pg_extension
ORDER BY extname;

-- ==================================================
-- üìù RESUMO FINAL
-- ==================================================

SELECT 
    'üéØ RESUMO' as categoria,
    'Verifica√ß√£o completa do banco realizada' as resultado,
    'Veja os resultados acima para entender o estado atual' as instrucao; 